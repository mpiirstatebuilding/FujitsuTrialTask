{
  "properties": [
    {
      "name": "weather-data.source",
      "type": "java.lang.String",
      "description": "Source to update weather data from."
    },
    {
      "name": "weather-data.required-stations",
      "type": "java.util.List",
      "description": "List of weather stations to take data from."
    },
    {
      "name": "weather-data.update-cron",
      "type": "java.lang.String",
      "description": "Cron string for scheduling weather data updates.."
    },
    {
      "name": "delivery-fee.rbf.city",
      "type": "java.util.HashMap",
      "description": "Map of regional base fees by city."
    },
    {
      "name": "delivery-fee.rbf.vehicle",
      "type": "java.lang.String",
      "description": "Map of regional base fee subtractions by vehicle."
    },
    {
      "name": "delivery-fee.atef",
      "type": "java.util.List",
      "description": "Extra fees based on air temperature. Order is from lowest specified temperature interval to highest."
    },
    {
      "name": "delivery-fee.wsef",
      "type": "java.util.List",
      "description": "Extra fees based on wind speed. Order is from lowest specified wind speed interval to highest. -1 represents error."
    },
    {
      "name": "delivery-fee.wpef",
      "type": "java.util.HashMap",
      "description": "Extra fees based on weather phenomena. -1 represents error."
    },
    {
      "name": "delivery-fee.query.city-to-station",
      "type": "java.util.HashMap",
      "description": "Dictionary to get the name of a weather station by city."
    }
  ] }